<?xml version="1.0"?>
<robot name="my_robot" xmlns:xacro = "http://www.ros.org/wiki/xacro>" > <!-- xmlns:xacro = "http://www.ros.org/wiki/xacro>" kısmı xacro kullanabilmek için.-->


    <material name="cyan">
        <color rgba="0 1 1 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <xacro:property name = "base_width" value = "0.6" />
    <xacro:property name = "base_lenght" value = "0.4" />
    <xacro:property name = "base_height" value = "0.2" />

    <xacro:property name = "wheel_radius" value = "0.1" />
    <xacro:property name = "wheel_lenght" value = "0.05" />
    <xacro:property name = "caster_wheel_radius" value = "0.05" />



    <xacro:macro name = "wheel_link" params = "prefix"> <!-- Tekerlek oluşturmada sadece tekar adı değiştiğinden tek tek tanımlamaktansa bir macro yazıyoruz-->
        <link name="${prefix}_wheel_link">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_lenght}"/>    
                </geometry>
                <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0  0.0"/> <!-- Tekerim yatay bir biiçimde oluşuyor ve benim istediğim gibi durması için x ekseni etrafında 90 derce döndürüyorum. 
                                                                       ( kırmızı = X , Yeşil = Y , Mavi = Z)-->
                <material name="black" />
            </visual>
        </link>
    </xacro:macro>

    <!-- Cisim merkezi tabanın ortasında değil de tabanın üstünde olsun diye link oluşturucaz .-->
    <link name="base_footprint" />

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_width} ${base_lenght} ${base_height}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/> 
            <material name="cyan" />
        </visual>
    </link>

    <link name="caster_wheel_link">
        <visual>
            <geometry>
                <sphere radius="${caster_wheel_radius}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/> 
            <material name="black" />
        </visual>
    </link>

    <xacro:wheel_link prefix = "right" />
    <xacro:wheel_link prefix = "left" />
    

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0 0 ${(base_height/2)+wheel_radius}" rpy="0.0 0.0 0.0"/>
    </joint>
    <joint name="base_right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <origin xyz="${-(base_width*2/6)} ${-( (base_lenght + wheel_lenght)/2)} ${-wheel_radius}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0 1 0.0"/> <!-- Cismin hangi eksenlerde dönüşüne müsaade ettiğimiz.--> <!--Duruş ayarlandıktan sonra bakıyoruz yeşil yani y ekseni etrafında dönmeli-->
        <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
    </joint>

    <joint name="base_left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <origin xyz="${-(base_width*2/6)} ${( (base_lenght + wheel_lenght)/2)} ${-wheel_radius}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0 1 0.0"/> <!-- Cismin hangi eksenlerde dönüşüne müsaade ettiğimiz.--> <!--Duruş ayarlandıktan sonra bakıyoruz yeşil yani y ekseni etrafında dönmeli-->
        <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
    </joint>

    <joint name="base_caster_wheel_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_wheel_link"/>
        <origin xyz="${base_width/4} 0 ${-(base_height/2 + caster_wheel_radius)}" rpy="0.0 0.0 0.0"/>
    </joint>
</robot>