1) oluşşturmak istediğin dizininde ".urdf" uzantılı dosyanı oluştur : nano simple_robot.urdf
2) code ile ".urdf" uzantılı dosyanın içine gir , kodla
3)"ros2 launch urdf_tutorial display.launch.py model:=/home/ibrahim/Ros_Egitim/Notlar/URDF_Dosyasi_Olusturma/simple_robot.urdf" "urdf_tutorial display.launch.py" kısmı urdf_tutorial içindeki "display.launch.py" başlatma dosyası aracılığıyla başlatıyorum. Model kısmında tam adresi girmeyi unutma ve path'i "pwd" ile al sonra sıkıntı çıkabiliyor.

"process has died" hatası:
Diyelim ki iki tane link oluşturdun bu durumda bunlar arasında ilişki olmalı yoksa hata alırsın.



************************

Kendi URDF dosyamızı ros2 paketini kullanmadan teminal üzerinden başlatma ( urdf_tutorial paketini kullanmadan )
1)  "ros2 run robot_state_publisher robot_state_publisher --ros-args -p robot_description:="$(xacro /home/ibrahim/Ros_Egitim/Notlar/URDF_Dosyasi_Olusturma/simple_robot.urdf)"
Not : Eğer urdf dosyanın içerisinde <!-- --> şeklinde belirtilmiş yorum satırları varsa çalışmıyor , hata veriyor.
2) join_state publisher'ı da başlatmamız lazım ( hani eklemleri döndürmek için açılan bar var ya o işte ) : "ros2 run joint_state_publisher_gui joint_state_publisher_gui"
Kontrol : "ros2 node list" de ikisinin de başladığını göreceksin. "rqt_graph" ile de kontrol edebilirsin.
3) rviz ekranımız eksik onu da başlatalım : "ros2 run rviz2 rviz2"
Açılınca : 
	3.1) Fixed Frame i seç
	3.2) Add kısmından robot Model ve TF ekle
	3.3) Description Topic ( Robot Model içinde ) seç
4) Belirleyeceğimiz base noktaya göre hareket gerçekşeltirilecek ve şimdi onu belirlememizlazım. Bunun için de urdf dosyası içinde düzenleme yapacağız ( kod içinde base linkin hemen üstünde olan satır.)(<link name="base_footprint">).

****************************

Kendi Launch dosyamızı oluşturararak URDF dosyamızı başlatma:
1) "/ros2_ws/src/simple_robot_description" dizinine git ve "launch adında klasör oluştur : "mkdir launch" ve dizinin içine gir "cd launch/"
2) Yazacak olduğumuz kendi .launch.xml dosssyamızı oluşturalım : "nano "display.launch.xml"
3) CMakeLists içerisine :"
install( # nedense bu otomatik oluşturunca gelmemişti ben elle ekledim.
  DIRECTORY urdf launch
  DESTINATION share/${PROJECT_NAME}/
)" ekle . Ardında display.launch.xml dosyasını kodlamaya başla. (display.launch_Acilklamali.xml)
4) build edelim ( work space gitmeyi unutma ) : "colcon build"
5) Farklı teminalde çalıştıralım bu terminali açınca ilk işimiz source etmek : "bashrc ~/.source
Not : Eğitimde source etmemiz gerektiğini söyledi lakin benim aklıma bu çalışma alanını önceden gömmüşolduğumuz geldi bu yüzden soruce etmeden direk çalıştırdım ve sorunsuz çalıştı.
6) çalıştır : "ros2 launch simple_robot_description display.launch.xml"
